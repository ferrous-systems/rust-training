name: Build and Test the Material

# Runs CI on pushing tags and pulls, but not both. Since we have branch protection on, these are our only cases to handle.
on:
  push:
    tags:
      - "*"
  pull_request:
  merge_group:

env:
  CARGO_TERM_COLOR: always # We want colors in our CI output
  CARGO_INCREMENTAL: 0 # Don't waste time writing out incremental build files
  CARGO_PROFILE_TEST_DEBUG: 0 # These are thrown away anyways, don't produce them

jobs:
  render-material:
    name: Render Material
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          graphviz: true
      - uses: taiki-e/install-action@v2
        with:
          tool: mdbook@0.4.42,mdbook-graphviz@0.2.1
      - run: |
          slug=$(./describe.sh "${GITHUB_REF}")
          echo "Building with slug '${slug}'"
          echo "slug=${slug}" >> "${GITHUB_ENV}"
          curl --proto '=https' --tlsv1.2 -LsSf https://github.com/ferrous-systems/mdslides/releases/download/v0.6.1/mdslides-installer.sh | sh
      - run: just assemble ${{ env.slug }}
      - uses: actions/upload-artifact@v4
        if: ${{success()}}
        with:
          name: Material
          if-no-files-found: error
          path: |
            ./rust-training-*/
      - if: github.event_name == 'push' && startswith(github.ref, 'refs/tags/')
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          artifacts: ./rust-training-${{ env.slug }}.zip

  test-book:
    name: Test Book
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          graphviz: true
      - uses: taiki-e/install-action@v2
        with:
          tool: mdbook@0.4.42,mdbook-graphviz@0.2.1
      - run: just test-book

  test-cheatsheets:
    name: Test Cheatsheets
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: xtask
      - run: just test-all-cheatsheets

  ferrocene-qemu-aarch64v8a:
    name: Build qemu-aarch64v8a with Ferrocene
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          criticalup: v1.1.0
      - env:
          CRITICALUP_TOKEN: ${{ secrets.CRITICALUP_TOKEN }}
        run: |
         just ferrocene-qemu-aarch64v8a
         just ferrocene-qemu-aarch64v8a-no-cargo

  ferrocene-qemu-aarch32v8r:
    name: Build qemu-aarch32v8r with Ferrocene
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          criticalup: v1.1.0
      - env:
          CRITICALUP_TOKEN: ${{ secrets.CRITICALUP_TOKEN }}
        run: |
         just ferrocene-qemu-aarch32v8r

  ferrocene-qemu-thumbv7em:
    name: Build qemu-thumbv7em with Ferrocene
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          criticalup: v1.1.0
      - env:
          CRITICALUP_TOKEN: ${{ secrets.CRITICALUP_TOKEN }}
        run: |
         just ferrocene-qemu-thumbv7em

  eg-native-ffi-use-c-in-rust:
    name: Build Example ffi-use-c-in-rust
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/native/ffi/use-c-in-rust
      - run: just build-native-ffi-use-c-in-rust

  eg-native-ffi-use-rust-in-c:
    name: Build Example ffi-use-rust-in-c
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/native/ffi/use-rust-in-c
      - run: just build-native-ffi-use-rust-in-c

  eg-native-stdout:
    name: Build Example native-stdout
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/native/stdout
      - run: just build-native-stdout

  eg-nrf52-bsp-demo:
    name: Build Example nrf52-bsp-demo
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/nrf52/bsp_demo
          target: thumbv7em-none-eabihf
      - run: just build-nrf52-bsp-demo

  eg-qemu-aarch64v8a:
    name: Build Example qemu-aarch64v8a
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/qemu-aarch64v8a
          target: aarch64-unknown-none
      - run: |
          rustup component add rust-src
      - run: just build-qemu-aarch64v8a

  eg-qemu-aarch64v8a-no-cargo:
    name: Build Example qemu-aarch64v8a-no-cargo
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          target: aarch64-unknown-none
      - run: |
          rustup component add llvm-tools-preview
          rustup component add rust-src
      - run: just build-qemu-aarch64v8a-no-cargo

  eg-qemu-aarch32v8r:
    name: Build Example qemu-aarch32v8r
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/qemu-aarch32v8r
      - run: |
          rustup component add rust-src
      - run: just build-qemu-aarch32v8r

  eg-qemu-thumbv7em:
    name: Build Example qemu-thumbv7em
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
        with:
          cache: example-code/qemu-thumbv7em
          target: thumbv7em-none-eabihf
      - run: just build-qemu-thumbv7em

  build-windows-examples:
    name: Build Example ffi-use-rust-in-c on Windows
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - uses: microsoft/setup-msbuild@v2
      - run:  just msbuild

  check-format:
    name: Check formatting
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup
      - run: just format-check
